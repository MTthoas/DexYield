/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketplaceIndexRouteImport } from './routes/marketplace/index'
import { Route as LendingIndexRouteImport } from './routes/lending/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as MarketplaceIndexMockRouteImport } from './routes/marketplace/index.mock'
import { Route as AdminIndexMockRouteImport } from './routes/admin/index.mock'
import { Route as ExploreHomeIndexRouteImport } from './routes/explore/home/index'

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)
const LendingIndexRoute = LendingIndexRouteImport.update({
  id: '/lending/',
  path: '/lending/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const MarketplaceIndexMockRoute = MarketplaceIndexMockRouteImport.update({
  id: '/marketplace/index/mock',
  path: '/marketplace/index/mock',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexMockRoute = AdminIndexMockRouteImport.update({
  id: '/index/mock',
  path: '/index/mock',
  getParentRoute: () => AdminRoute,
} as any)
const ExploreHomeIndexRoute = ExploreHomeIndexRouteImport.update({
  id: '/explore/home/',
  path: '/explore/home/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/lending': typeof LendingIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/explore/home': typeof ExploreHomeIndexRoute
  '/admin/index/mock': typeof AdminIndexMockRoute
  '/marketplace/index/mock': typeof MarketplaceIndexMockRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/lending': typeof LendingIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/explore/home': typeof ExploreHomeIndexRoute
  '/admin/index/mock': typeof AdminIndexMockRoute
  '/marketplace/index/mock': typeof MarketplaceIndexMockRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/lending/': typeof LendingIndexRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/explore/home/': typeof ExploreHomeIndexRoute
  '/admin/index/mock': typeof AdminIndexMockRoute
  '/marketplace/index/mock': typeof MarketplaceIndexMockRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/admin/'
    | '/dashboard'
    | '/lending'
    | '/marketplace'
    | '/explore/home'
    | '/admin/index/mock'
    | '/marketplace/index/mock'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/lending'
    | '/marketplace'
    | '/explore/home'
    | '/admin/index/mock'
    | '/marketplace/index/mock'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/'
    | '/dashboard/'
    | '/lending/'
    | '/marketplace/'
    | '/explore/home/'
    | '/admin/index/mock'
    | '/marketplace/index/mock'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  LendingIndexRoute: typeof LendingIndexRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  ExploreHomeIndexRoute: typeof ExploreHomeIndexRoute
  MarketplaceIndexMockRoute: typeof MarketplaceIndexMockRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lending/': {
      id: '/lending/'
      path: '/lending'
      fullPath: '/lending'
      preLoaderRoute: typeof LendingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/marketplace/index/mock': {
      id: '/marketplace/index/mock'
      path: '/marketplace/index/mock'
      fullPath: '/marketplace/index/mock'
      preLoaderRoute: typeof MarketplaceIndexMockRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/index/mock': {
      id: '/admin/index/mock'
      path: '/index/mock'
      fullPath: '/admin/index/mock'
      preLoaderRoute: typeof AdminIndexMockRouteImport
      parentRoute: typeof AdminRoute
    }
    '/explore/home/': {
      id: '/explore/home/'
      path: '/explore/home'
      fullPath: '/explore/home'
      preLoaderRoute: typeof ExploreHomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AdminRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminIndexMockRoute: typeof AdminIndexMockRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminIndexMockRoute: AdminIndexMockRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  LendingIndexRoute: LendingIndexRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  ExploreHomeIndexRoute: ExploreHomeIndexRoute,
  MarketplaceIndexMockRoute: MarketplaceIndexMockRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
